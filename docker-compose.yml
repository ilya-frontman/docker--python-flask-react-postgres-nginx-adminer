version: "3"

services:

  pgdb:
    restart: always
    image: postgres:alpine
    environment:
    - POSTGRES_USER=$DB_USER
    - POSTGRES_PASSWORD=$DB_PASSWORD
    ports:
    - $DB_PORT:$DB_PORT
    volumes:
    - ./db/data:/var/lib/postgresql/data
    command: -p $DB_PORT

  py_api:
    restart: always
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    depends_on:
      - pgdb
    environment:
      - PORT=$API_PORT
      - PGHOST=pgdb
      - PGPORT=$DB_PORT
      - PGUSER=$DB_USER
      - PGPASSWORD=$DB_PASSWORD
      - PGDATABASE=$DB_NAME
    ports:
      - $API_PORT:$API_PORT
    volumes:
      - ./server:/usr/src/app
      
  client_app:
    restart: always
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    depends_on:
      - py_api
    environment:
      - NODE_ENV=$UI_NODE_ENV
      - PORT=$UI_PORT
      - REACT_APP_API_HOST
    ports:
      - $UI_PORT:$UI_PORT
    volumes:
      - /app/node_modules
      - ./client:/app
      
  nginx_web:
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    depends_on:
      - client_app
    ports:
      - $NGINX_PORT:$NGINX_PORT

  adm:
    restart: always
    image: adminer:latest
    depends_on:
      - nginx_web
    ports:
      - $ADM_PORT:$ADM_PORT
    environment:
      - ADMINER_DEFAULT_SERVER=pgdb